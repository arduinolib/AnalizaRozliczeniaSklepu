//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit18.h"
#include "Unit13.h"
#include "Unit15.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm18 *Form18;
//---------------------------------------------------------------------------
__fastcall TForm18::TForm18(TComponent* Owner)
        : TForm(Owner)
{
}
//---------------------------------------------------------------------------
// Plik Ÿród³owy np. Unit1.cpp
//--- FUNKCJA ODCZYTUJ¥CA LICZBÊ KOLUMN I WIERSZY ---------------------------
void SetColRow(AnsiString txt, TStringGrid *Grid)
{
 int t = txt.AnsiPos("\";");
 String txt_1 = txt.SubString(1, t);
 String txt_2 = txt.SubString(t + 2, 10);
 Grid->ColCount = txt_1.SubString(5, txt_1.Length() - 5).ToInt();
 Grid->RowCount = txt_2.SubString(5, txt_2.Length() - 5).ToInt();
}
//--- FUNKCJA PRZEPISUJ¥CA TEKST DO KOMÓREK I ODCZYUJ¥CA SZEROKOŒÆ KOLUMN ---
AnsiString SetCellText(AnsiString txt, AnsiString Wtxt, int &Size, int Col)
{
 String txt_1 = "", txt_2 = "";
 for(int i = -1; i < Col; i++)
 {
  int q = 0;
  int t = txt.AnsiPos(";\"");
  if(i >= 0)
   q = Wtxt.AnsiPos(";");
  txt_1 = txt.SubString(2, t - 3);
  if(i >= 0)
   txt_2 = Wtxt.SubString(1, q - 1);

  if(t > 0)
   txt = txt.Delete(1, t);
  else
   txt_1 = txt.SubString(2, txt.Length() - 2);

  if(i >= 0)
  {
   if(q > 0)
    Wtxt = Wtxt.Delete(1, q);
   else
    txt_2 = Wtxt.SubString(1, Wtxt.Length() - 1);
  }
 }
 Size = txt_2.ToInt();
 if(txt_1.SubString(txt_1.Length() - 1, txt_1.Length() + 1) == ";'")
  txt_1 = txt_1.Delete(txt_1.Length(), txt_1.Length() + 1);

 return txt_1;
}
//--- FUNKCJA ODCZYTUJ¥CA TABELÊ Z PLIKU ------------------------------------
void __fastcall TForm18::LoadGridFromFile(AnsiString FileName, TStringGrid *Grid)
{
 TStringList *Lista = new TStringList;
 Lista->LoadFromFile(FileName);
 SetColRow(Lista->Strings[0], Grid);

 for(int i = 0; i < Grid->RowCount; i++)
 {
  for(int j = 0; j < Grid->ColCount; j++)
  {
   int Size;
   Grid->Cells[j][i] = SetCellText(Lista->Strings[i + 2], Lista->Strings[1], Size, j + 1);
   Grid->ColWidths[j] = Size;
  }
 }
 delete Lista;
}
//--------------------------------

void __fastcall TForm18::FormCreate(TObject *Sender)
{


         LoadGridFromFile("Rejestr.roz", StringGrid1);
      
        StringGrid1->FixedCols=0;
        StringGrid1->ColWidths[0]=100;   //data faktury
        StringGrid1->ColWidths[1]=100;   //nr faktury
        StringGrid1->ColWidths[2]=100;   //NIP
        StringGrid1->ColWidths[3]=360;   //nazwa odbiorcy
        StringGrid1->ColWidths[4]=100;   //data sprzeda¿y
        StringGrid1->ColWidths[5]=120;  //forma p³atnosci
        StringGrid1->ColWidths[6]=100;  //termin p³atnosci
        StringGrid1->ColWidths[7]=100;  // kod pocztowy
        StringGrid1->ColWidths[8]=200;  // miejscowosc
        StringGrid1->ColWidths[9]=300;  //adres
        StringGrid1->ColWidths[10]=200;  //nazwisko i imie odbiorcy
        StringGrid1->ColWidths[11]=100;  //wartosc faktury

        StringGrid1->Cells[0][0]="Data fakt";
        StringGrid1->Cells[1][0]="Nr faktury";
        StringGrid1->Cells[2][0]="NIP";
        StringGrid1->Cells[3][0]="Nazwa odbiorcy";
        StringGrid1->Cells[4][0]="Data sprz";
        StringGrid1->Cells[5][0]="Forma p³atn";
        StringGrid1->Cells[6][0]="Termin p³at";
        StringGrid1->Cells[7][0]="Kod pocz.";
        StringGrid1->Cells[8][0]="Miejscowosc";
        StringGrid1->Cells[9][0]="Adres";
        StringGrid1->Cells[10][0]="Nazwisko odbiorcy";
        StringGrid1->Cells[11][0]="Wartosc fakt"; 
}
//---------------------------------------------------------------------------
void __fastcall TForm18::Button2Click(TObject *Sender)
{
         Form18->Close();
}
//---------------------------------------------------------------------------


void __fastcall TForm18::Button1Click(TObject *Sender)
{
          if(StringGrid1->Cells[0][StringGrid1->Row]=="Data fakt" )
         {
           Application->MessageBox(("Nie wybrano faktury „" + Edit1->Text + "”").c_str(),
           "Wybierz fakturê", MB_OK | MB_ICONINFORMATION);
           return;
         }
          String nfakt=StringGrid1->Cells[1][StringGrid1->Row];
          nfakt.Delete(2,5);
         LoadGridFromFile("Rejestr.roz", StringGrid1);
         LoadGridFromFile("F"+nfakt, Form13->StringGrid1);

        Form13->DateTimePicker1->DateTime=StringGrid1->Cells[0][StringGrid1->Row];
        Form13->Edit2->Text=StringGrid1->Cells[1][StringGrid1->Row];
        Form13->Edit4->Text=StringGrid1->Cells[2][StringGrid1->Row];
        Form13->Edit1->Text=StringGrid1->Cells[3][StringGrid1->Row];
        Form13->DateTimePicker2->Date=StringGrid1->Cells[4][StringGrid1->Row];
        Form13->ComboBox3->Text=StringGrid1->Cells[5][StringGrid1->Row];
        Form13->CSpinEdit1->Text=StringGrid1->Cells[6][StringGrid1->Row];
        Form13->Edit5->Text=StringGrid1->Cells[7][StringGrid1->Row];
        Form13->Edit6->Text=StringGrid1->Cells[8][StringGrid1->Row];
        Form13->Edit7->Text=StringGrid1->Cells[9][StringGrid1->Row];
        Form13->Edit8->Text=StringGrid1->Cells[10][StringGrid1->Row];
        Form13->Edit3->Text=StringGrid1->Cells[11][StringGrid1->Row];

         Form18->Close();
}
//---------------------------------------------------------------------------

